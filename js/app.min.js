document.addEventListener('DOMContentLoaded', function () {
    // height 100vh fix for IOS
    let vh = window.innerHeight * 0.01;
    document.documentElement.style.setProperty('--vh', `${vh}px`);

    // resize
    window.addEventListener('resize', () => {
        let vh = window.innerHeight * 0.01;
        
        document.documentElement.style.setProperty('--vh', `${vh}px`);
    });

    // inputmask
    Inputmask().mask(document.querySelectorAll('input'))

    // textarea
    const allTextarea = document.querySelectorAll('textarea')

    if (allTextarea) {
        allTextarea.forEach(el => {
            el.style.height = el.setAttribute('style', 'height: ' + el.scrollHeight + 'px');
            el.classList.add('auto');
            el.addEventListener('input', e => {
                el.style.height = 'auto';
                el.style.height = (el.scrollHeight) + 'px';
            });
        });
    }

    // input help
    const inputs = document.querySelectorAll('.input-control__input')

    if (inputs) {
        inputs.forEach((item) => {
            item.addEventListener('input', () => {
                const parent = item.closest('.input-control')

                if (item.value.length > 0) {
                    parent.querySelector('.input-control__help').classList.add('input-control__help--hidden')
                } else {
                    parent.querySelector('.input-control__help').classList.remove('input-control__help--hidden')
                }
            })
        });
    }
    
    // slim select
    const allSelect = document.querySelectorAll('.select')

    if (allSelect) {
        allSelect.forEach(item => {
            new SlimSelect({
                select: item
            });
        })
    }
    
    // smooth scroll
    function currentYPosition() {
        // Firefox, Chrome, Opera, Safari
        if (self.pageYOffset) return self.pageYOffset;

        // Internet Explorer 6 - standards mode
        if (document.documentElement && document.documentElement.scrollTop)
            return document.documentElement.scrollTop;
        
        // Internet Explorer 6, 7 and 8
        if (document.body.scrollTop) return document.body.scrollTop;

        return 0;
    } 
    
    function elmYPosition(eID) {
        let elm = document.getElementById(eID);
        let y = elm.offsetTop;
        let node = elm;
        while (node.offsetParent && node.offsetParent != document.body) {
            node = node.offsetParent;
            y += node.offsetTop;
        } return y;
    }
    
    function smoothScroll(eID) {
        let startY = currentYPosition();
        let stopY = elmYPosition(eID) - 87;
        let distance = stopY > startY ? stopY - startY : startY - stopY;
        if (distance < 100) {
            scrollTo(0, stopY); return;
        }
        let speed = Math.round(distance / 100);
        if (speed >= 20) speed = 20;
        let step = Math.round(distance / 25);
        let leapY = stopY > startY ? startY + step : startY - step;
        let timer = 0;
        if (stopY > startY) {
            for (let i = startY; i < stopY; i += step ) {
                setTimeout('window.scrollTo(0, ' + leapY + ')', timer * speed);
                leapY += step; if (leapY > stopY) leapY = stopY; timer++;
            } return;
        }
        for (let i = startY; i > stopY; i -= step ) {
            setTimeout('window.scrollTo(0, ' + leapY + ')', timer * speed);
            leapY -= step; if (leapY < stopY) leapY = stopY; timer++;
        }
    }

    // smooth scroll on all links
    const allLinks = document.querySelectorAll('a[href^="#"]')

    if (allLinks) {
        allLinks.forEach(item => {
            item.addEventListener('click', (event) => {
                event.preventDefault()
        
                if (item.getAttribute('href').length > 1) {
                    smoothScroll(item.getAttribute('href').slice(1))
                }
            })
        })
    }

    // checker
    const useItemChecker = (els, onClickOutside) => {
        const checkBodyClick = (e) => {
            let currentEl = e.target;

            while (currentEl) {
                if (els.includes(currentEl)) break;
                currentEl = currentEl.parentNode
            }

            if (!currentEl) {
                onClickOutside()
                removeBodyChecker()
            }
        }
        function setBodyChecker  ()  {
            document.documentElement.addEventListener('click', checkBodyClick)
        }
        function removeBodyChecker ()  {
            document.documentElement.removeEventListener('click', checkBodyClick)
        }
        return {setBodyChecker, removeBodyChecker}
    }
    
    // mobile menu
    const hamburger = document.getElementById('hamburger-toggle')
    const mobileMenu = document.getElementById('mobile-menu')
    let scrollPosition = 0;

    if (hamburger && mobileMenu) {
        hamburger.addEventListener('click', (event) => {
            event.preventDefault()

            scrollPosition = window.pageYOffset

            if (mobileMenu.classList.contains('mobile-menu--active')) {
                hamburger.classList.remove('hamburger--active')
                mobileMenu.classList.remove('mobile-menu--active')

                document.body.style.removeProperty('overflow')
                document.body.style.removeProperty('position')
                document.body.style.removeProperty('top')
                document.body.style.removeProperty('width')
                window.scrollTo({top: scrollPosition, behavior: "instant"})
            } else {
                hamburger.classList.add('hamburger--active')
                mobileMenu.classList.add('mobile-menu--active')

                document.body.style.overflow = 'hidden'
                document.body.style.position = 'fixed'
                document.body.style.top = '-' + scrollPosition + 'px'
                document.body.style.width = '100%'
            }
        })
    }

    // masonry
    var masonryWrapper = document.querySelectorAll('.works__wrapper');

    if (masonryWrapper) {
        masonryWrapper.forEach(item => {
            const msnry = new Masonry(item, {
                itemSelector: '.works__item',
                percentPosition: true,
                gutter: '.gutter-sizer',
            });
        })
    }

    // tabs
    const tabsItems = document.querySelectorAll('.tabs__item')

    if (tabsItems) {
        tabsItems.forEach((item, i) => {
            item.addEventListener('click', () => {
                const parent = item.closest('.tabs')

                parent.querySelectorAll('.tabs__item').forEach((child) => child.classList.remove('tabs__item--active'))
                parent.querySelectorAll('.tabs__wrapper').forEach((child) => child.classList.remove('tabs__wrapper--active'))
    
                item.classList.add('tabs__item--active')

                const el = parent.querySelector('.tabs__item--active')
                const index = [...parent.querySelectorAll('.tabs__item')].indexOf(el);

                parent.querySelectorAll('.tabs__wrapper')[index].classList.add('tabs__wrapper--active')
                parent.querySelectorAll('.tabs__wrapper')[index].style.opacity = 0

                //msnry.layout();
                if (masonryWrapper) {
                    masonryWrapper.forEach(item => {
                        const msnry = new Masonry(item, {
                            itemSelector: '.works__item',
                            percentPosition: true,
                            gutter: '.gutter-sizer',
                        });
                    })
                }

                setTimeout(() => {
                    parent.querySelectorAll('.tabs__wrapper')[index].style.opacity = 1
                }, 150)
            })
        })
    }
    
    // tabs dropdown
    const tabsDropdown = document.querySelectorAll('.tabs-dropdown__trigger')
    const tabsDropdownElems = document.querySelectorAll('.tabs-dropdown__elem')
    const tabsDropdownCurrentCounter = document.querySelectorAll('.tabs-dropdown__counter--current')
    const tabsDropdownTotalCounter = document.querySelectorAll('.tabs-dropdown__counter--total')

    if (tabsDropdownCurrentCounter && tabsDropdownTotalCounter) {
        tabsDropdownCurrentCounter.forEach((item) => {
            item.innerHTML = 1
        })
        tabsDropdownTotalCounter.forEach((item) => {
            const parent = item.closest('.tabs-dropdown')
            item.innerHTML = parent.querySelectorAll('.tabs-dropdown__elem').length
        })
    }

    if (tabsDropdown) {
        tabsDropdown.forEach((item) => {
            const close = () => {
                item.closest('.tabs-dropdown').classList.remove('tabs-dropdown--active')
            }
            const itemChecker = useItemChecker([item.parentNode], close)


            item.addEventListener('click', (event) => {
                event.preventDefault()

                const parent = item.closest('.tabs-dropdown')

                if (parent.classList.contains('tabs-dropdown--active')) {
                    close()
                } else {
                    parent.classList.add('tabs-dropdown--active')
                    itemChecker.setBodyChecker()
                }
            })
        })
    }

    if (tabsDropdownElems) {
        tabsDropdownElems.forEach((item, i) => {
            item.addEventListener('click', (event) => {
                event.preventDefault()

                const parent = item.closest('.tabs-dropdown')
                const parentTabs = item.closest('.tabs')
                const currentItem = parent.querySelector('.tabs-dropdown__current')
                const currentCounter = parent.querySelector('.tabs-dropdown__counter--current')

                parent.classList.remove('tabs-dropdown--active')
                parent.querySelectorAll('.tabs-dropdown__item').forEach((child) => child.classList.remove('tabs-dropdown__item--checked'))
                parentTabs.querySelectorAll('.tabs__wrapper').forEach((child) => child.classList.remove('tabs__wrapper--active'))

                item.parentNode.classList.add('tabs-dropdown__item--checked')
                currentItem.innerHTML = item.innerHTML

                const el = parent.querySelector('.tabs-dropdown__item--checked')
                const index = [...parent.querySelectorAll('.tabs-dropdown__item')].indexOf(el);

                parentTabs.querySelectorAll('.tabs__wrapper')[index].classList.add('tabs__wrapper--active')
                parentTabs.querySelectorAll('.tabs__wrapper')[index].style.opacity = 0
                currentCounter.innerHTML = index + 1

                //msnry.layout();
                if (masonryWrapper) {
                    masonryWrapper.forEach(item => {
                        const msnry = new Masonry(item, {
                            itemSelector: '.works__item',
                            percentPosition: true,
                            gutter: '.gutter-sizer',
                        });
                    })
                }

                setTimeout(() => {
                    parentTabs.querySelectorAll('.tabs__wrapper')[index].style.opacity = 1
                }, 150)
            })
        })
    }

    // range
    const valueMoneyField = document.querySelectorAll('.store-filter__value');
    const rangeMoney = document.getElementById('range-money');

    if (rangeMoney && valueMoneyField) {
        noUiSlider.create(rangeMoney, {
            start: [6500, 55000],
            connect: true,
            range: {
                'min': 0,
                'max': 100000
            }
        });

        rangeMoney.noUiSlider.on('update', function( value, handle ) {
            
            if (handle === 0) {
                valueMoneyField[0].innerHTML = Math.round(value[0])
            } else {
                valueMoneyField[1].innerHTML = Math.round(value[1])
            }
        });
    }

    // quantity
    const quantity = document.querySelectorAll('.quantity')
    const quantityMinus = document.getElementsByClassName('quantity__minus')
    const quantityPlus = document.getElementsByClassName('quantity__plus')
    
    let quantityCountInput = document.getElementsByClassName('quantity__number')
    
    if (quantity && quantityMinus && quantityPlus) {
        quantity.forEach((s, i) => {
            quantityMinus[i].addEventListener('click', () => {
                if ((quantityCountInput[i].value) * 1 > 1) {
                    quantityCountInput[i].value = (quantityCountInput[i].value) * 1 - 1;
                }
            });
    
            quantityPlus[i].addEventListener('click', () => {
                quantityCountInput[i].value = (quantityCountInput[i].value) * 1 + 1;
            })
        })
    }

    // swiper
    const mainSlider = document.querySelector('.main__slider .swiper')

    if (mainSlider) {
        const myMainSlider = new Swiper(mainSlider, {
            slidesPerView: 1,
            speed: 800,
            loop: true,
            navigation: {
                prevEl: '.swiper-button-prev',
                nextEl: '.swiper-button-next',
            },
        });
    }

    const infoContentSlider = document.querySelector('.info-content__slider .swiper')

    if (infoContentSlider) {
        const myInfoContentSlider = new Swiper(infoContentSlider, {
            slidesPerView: 1,
            speed: 0,
            loop: true,
            allowTouchMove: false,
            navigation: {
                prevEl: '.swiper-button-prev',
                nextEl: '.swiper-button-next',
            },
        });
    }

    const productSlider = document.querySelectorAll('.product__slider .swiper')

    if (productSlider) {
        productSlider.forEach(slider => {
            const myProductSlider = new Swiper(slider, {
                slidesPerView: 1,
                loop: true,
                navigation: {
                    prevEl: '.swiper-button-prev',
                    nextEl: '.swiper-button-next',
                },
                pagination: {
                    el: '.swiper-pagination',
                },
            });
        })
    }

    // modal
    const modal = document.querySelectorAll('.modal')
    const modalBtn = document.querySelectorAll('.modal-btn')
    const modalClose = document.querySelectorAll('.modal__close')
    
    if (modal && modalBtn && modalClose) {
        // modal btn
        modalBtn.forEach((item, i) => {
            item.addEventListener('click', (event) => {
                event.preventDefault();

                const modalID = item.dataset.id

                document.querySelectorAll('.modal.modal--active').forEach((child) => child.classList.remove('modal--active'))
                document.getElementById(modalID).classList.add('modal--active')
                document.body.classList.add('scroll-disabled')
            });
        });

        // modal close
        modalClose.forEach((item) => {
            item.addEventListener('click', () => {
                document.querySelectorAll('.modal.modal--active').forEach((child) => child.classList.remove('modal--active'))
                document.body.classList.remove('scroll-disabled')
            });
        });
    }

    // fancybox
    Fancybox.bind('[data-fancybox="gallery"]', {
        animated: false,
        dragToClose: false,
        showClass: false,
        hideClass: false,
        closeButton: "top",
        Image: {
            zoom: false,
            wheel: false,
            click: false,
        },
        Thumbs: false,
        Toolbar: {
            display: [
                { id: "counter", position: "left", html: '<img src="img/logotype.png">' },
                { id: "prev", position: "left", html: '<svg><use xlink:href="img/sprite.svg#icon-arrow-prev"></use></svg>' },
                { id: "next", position: "right", html: '<svg><use xlink:href="img/sprite.svg#icon-arrow-next"></use></svg>', },
                { id: "close", position: "right", html: '<span>Закрыть</span><svg><use xlink:href="img/sprite.svg#icon-close"></use></svg>', },
                { id: "fullscreen", position: "center" },
            ],
        },
        beforeShow: function(){
            this.title =  this.title + " - " + $(this.element).data("caption");
        }
    });
});